%%
% Poisson mechanism based on Jason's email implementation. For some
% reason this produces huge PSPs

% Pulse train properties
PPstim = -.1;
PPfreq = 40; % in Hz
PPwidth = 2; % in ms
PPshift = 0; % in ms

% Time series properties
Tend=T(end); 	    % ms, max simulation duration
dt=0.01;        % ms, time step duration
PPonset = 300;    % ms, onset time
PPoffset = Inf;   % ms, offset time

% Aperiodic pulse specification
ap_pulse_num = 11;        % The pulse number that should be delayed. 0 for no aperiodicity.
ap_pulse_delay = 12.5;  % ms, the amount the spike should be delayed. 0 for no aperiodicity.

% Pulse train preset (codes for different presets of pulse train; see getDeltaTrainPresets.m for details)
pulse_train_preset = 1

kernel_type = 1;
width2_rise = 0.25;

% Facilitation parameters
PPFacTau = 300;
PPFacFactor = 2.0;

% Build pulse train
s = getDeltaTrainPresets(PPfreq,PPshift,Tend,dt,PPonset,PPoffset,ap_pulse_num,ap_pulse_delay,pulse_train_preset);
s2 = convolveDeltaTrainwithKernel(s,dt,PPwidth,Npop,kernel_type,width2_rise);

% Calculate facilitation function
facilitation_mask = (exp(-(((T-PPonset)>0).*(T-PPonset))/PPFacTau))*(1-PPFacFactor) + PPFacFactor;

% Apply facilitation mask to data
s3 = s2 .* repmat(facilitation_mask(:),1,Npop);

monitor functions % always record the current

Iext(X)=PPstim*s3(k,:)
@current += -Iext(X)

